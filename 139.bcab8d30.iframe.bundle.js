/*! For license information please see 139.bcab8d30.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunknadoo_io=self.webpackChunknadoo_io||[]).push([[139],{"./node_modules/@radix-ui/react-form/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gN:()=>Field,__:()=>dist_Label,v0:()=>Message,fC:()=>dist_Root});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/primitive/dist/index.mjs"),react_compose_refs_dist=__webpack_require__("./node_modules/@radix-ui/react-compose-refs/dist/index.mjs"),react_context_dist=__webpack_require__("./node_modules/@radix-ui/react-context/dist/index.mjs"),react_id_dist=__webpack_require__("./node_modules/@radix-ui/react-id/dist/index.mjs"),react_primitive_dist=__webpack_require__("./node_modules/@radix-ui/react-primitive/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),Label=react.forwardRef(((props,forwardedRef)=>(0,jsx_runtime.jsx)(react_primitive_dist.WV.label,{...props,ref:forwardedRef,onMouseDown:event=>{event.target.closest("button, input, select, textarea")||(props.onMouseDown?.(event),!event.defaultPrevented&&event.detail>1&&event.preventDefault())}})));Label.displayName="Label";var[createFormContext,createFormScope]=(0,react_context_dist.b)("Form"),[ValidationProvider,useValidationContext]=createFormContext("Form"),[AriaDescriptionProvider,useAriaDescriptionContext]=createFormContext("Form"),Form=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,onClearServerErrors=()=>{},...rootProps}=props,formRef=react.useRef(null),composedFormRef=(0,react_compose_refs_dist.e)(forwardedRef,formRef),[validityMap,setValidityMap]=react.useState({}),getFieldValidity=react.useCallback((fieldName=>validityMap[fieldName]),[validityMap]),handleFieldValidityChange=react.useCallback(((fieldName,validity)=>setValidityMap((prevValidityMap=>({...prevValidityMap,[fieldName]:{...prevValidityMap[fieldName]??{},...validity}})))),[]),handleFieldValiditionClear=react.useCallback((fieldName=>{setValidityMap((prevValidityMap=>({...prevValidityMap,[fieldName]:void 0}))),setCustomErrorsMap((prevCustomErrorsMap=>({...prevCustomErrorsMap,[fieldName]:{}})))}),[]),[customMatcherEntriesMap,setCustomMatcherEntriesMap]=react.useState({}),getFieldCustomMatcherEntries=react.useCallback((fieldName=>customMatcherEntriesMap[fieldName]??[]),[customMatcherEntriesMap]),handleFieldCustomMatcherAdd=react.useCallback(((fieldName,matcherEntry)=>{setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap=>({...prevCustomMatcherEntriesMap,[fieldName]:[...prevCustomMatcherEntriesMap[fieldName]??[],matcherEntry]})))}),[]),handleFieldCustomMatcherRemove=react.useCallback(((fieldName,matcherEntryId)=>{setCustomMatcherEntriesMap((prevCustomMatcherEntriesMap=>({...prevCustomMatcherEntriesMap,[fieldName]:(prevCustomMatcherEntriesMap[fieldName]??[]).filter((matcherEntry=>matcherEntry.id!==matcherEntryId))})))}),[]),[customErrorsMap,setCustomErrorsMap]=react.useState({}),getFieldCustomErrors=react.useCallback((fieldName=>customErrorsMap[fieldName]??{}),[customErrorsMap]),handleFieldCustomErrorsChange=react.useCallback(((fieldName,customErrors)=>{setCustomErrorsMap((prevCustomErrorsMap=>({...prevCustomErrorsMap,[fieldName]:{...prevCustomErrorsMap[fieldName]??{},...customErrors}})))}),[]),[messageIdsMap,setMessageIdsMap]=react.useState({}),handleFieldMessageIdAdd=react.useCallback(((fieldName,id)=>{setMessageIdsMap((prevMessageIdsMap=>{const fieldDescriptionIds=new Set(prevMessageIdsMap[fieldName]).add(id);return{...prevMessageIdsMap,[fieldName]:fieldDescriptionIds}}))}),[]),handleFieldMessageIdRemove=react.useCallback(((fieldName,id)=>{setMessageIdsMap((prevMessageIdsMap=>{const fieldDescriptionIds=new Set(prevMessageIdsMap[fieldName]);return fieldDescriptionIds.delete(id),{...prevMessageIdsMap,[fieldName]:fieldDescriptionIds}}))}),[]),getFieldDescription=react.useCallback((fieldName=>Array.from(messageIdsMap[fieldName]??[]).join(" ")||void 0),[messageIdsMap]);return(0,jsx_runtime.jsx)(ValidationProvider,{scope:__scopeForm,getFieldValidity,onFieldValidityChange:handleFieldValidityChange,getFieldCustomMatcherEntries,onFieldCustomMatcherEntryAdd:handleFieldCustomMatcherAdd,onFieldCustomMatcherEntryRemove:handleFieldCustomMatcherRemove,getFieldCustomErrors,onFieldCustomErrorsChange:handleFieldCustomErrorsChange,onFieldValiditionClear:handleFieldValiditionClear,children:(0,jsx_runtime.jsx)(AriaDescriptionProvider,{scope:__scopeForm,onFieldMessageIdAdd:handleFieldMessageIdAdd,onFieldMessageIdRemove:handleFieldMessageIdRemove,getFieldDescription,children:(0,jsx_runtime.jsx)(react_primitive_dist.WV.form,{...rootProps,ref:composedFormRef,onInvalid:(0,dist.M)(props.onInvalid,(event=>{const firstInvalidControl=getFirstInvalidControl(event.currentTarget);firstInvalidControl===event.target&&firstInvalidControl.focus(),event.preventDefault()})),onSubmit:(0,dist.M)(props.onSubmit,onClearServerErrors,{checkForDefaultPrevented:!1}),onReset:(0,dist.M)(props.onReset,onClearServerErrors)})})})}));Form.displayName="Form";var[FormFieldProvider,useFormFieldContext]=createFormContext("FormField"),FormField=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,name,serverInvalid=!1,...fieldProps}=props,validity=useValidationContext("FormField",__scopeForm).getFieldValidity(name),id=(0,react_id_dist.M)();return(0,jsx_runtime.jsx)(FormFieldProvider,{scope:__scopeForm,id,name,serverInvalid,children:(0,jsx_runtime.jsx)(react_primitive_dist.WV.div,{"data-valid":getValidAttribute(validity,serverInvalid),"data-invalid":getInvalidAttribute(validity,serverInvalid),...fieldProps,ref:forwardedRef})})}));FormField.displayName="FormField";var FormLabel=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,...labelProps}=props,validationContext=useValidationContext("FormLabel",__scopeForm),fieldContext=useFormFieldContext("FormLabel",__scopeForm),htmlFor=labelProps.htmlFor||fieldContext.id,validity=validationContext.getFieldValidity(fieldContext.name);return(0,jsx_runtime.jsx)(Label,{"data-valid":getValidAttribute(validity,fieldContext.serverInvalid),"data-invalid":getInvalidAttribute(validity,fieldContext.serverInvalid),...labelProps,ref:forwardedRef,htmlFor})}));FormLabel.displayName="FormLabel";var FormControl=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,...controlProps}=props,validationContext=useValidationContext("FormControl",__scopeForm),fieldContext=useFormFieldContext("FormControl",__scopeForm),ariaDescriptionContext=useAriaDescriptionContext("FormControl",__scopeForm),ref=react.useRef(null),composedRef=(0,react_compose_refs_dist.e)(forwardedRef,ref),name=controlProps.name||fieldContext.name,id=controlProps.id||fieldContext.id,customMatcherEntries=validationContext.getFieldCustomMatcherEntries(name),{onFieldValidityChange,onFieldCustomErrorsChange,onFieldValiditionClear}=validationContext,updateControlValidity=react.useCallback((async control=>{if(hasBuiltInError(control.validity)){const controlValidity2=validityStateToObject(control.validity);return void onFieldValidityChange(name,controlValidity2)}const formData=control.form?new FormData(control.form):new FormData,matcherArgs=[control.value,formData],syncCustomMatcherEntries=[],ayncCustomMatcherEntries=[];customMatcherEntries.forEach((customMatcherEntry=>{!function isAsyncCustomMatcherEntry(entry,args){return"AsyncFunction"===entry.match.constructor.name||function returnsPromise(func,args){return func(...args)instanceof Promise}(entry.match,args)}(customMatcherEntry,matcherArgs)?function isSyncCustomMatcherEntry(entry){return"Function"===entry.match.constructor.name}(customMatcherEntry)&&syncCustomMatcherEntries.push(customMatcherEntry):ayncCustomMatcherEntries.push(customMatcherEntry)}));const syncCustomErrors=syncCustomMatcherEntries.map((({id:id2,match})=>[id2,match(...matcherArgs)])),syncCustomErrorsById=Object.fromEntries(syncCustomErrors),hasSyncCustomErrors=Object.values(syncCustomErrorsById).some(Boolean),hasCustomError=hasSyncCustomErrors;control.setCustomValidity(hasCustomError?DEFAULT_INVALID_MESSAGE:"");const controlValidity=validityStateToObject(control.validity);if(onFieldValidityChange(name,controlValidity),onFieldCustomErrorsChange(name,syncCustomErrorsById),!hasSyncCustomErrors&&ayncCustomMatcherEntries.length>0){const promisedCustomErrors=ayncCustomMatcherEntries.map((({id:id2,match})=>match(...matcherArgs).then((matches=>[id2,matches])))),asyncCustomErrors=await Promise.all(promisedCustomErrors),asyncCustomErrorsById=Object.fromEntries(asyncCustomErrors),hasCustomError2=Object.values(asyncCustomErrorsById).some(Boolean);control.setCustomValidity(hasCustomError2?DEFAULT_INVALID_MESSAGE:"");const controlValidity2=validityStateToObject(control.validity);onFieldValidityChange(name,controlValidity2),onFieldCustomErrorsChange(name,asyncCustomErrorsById)}}),[customMatcherEntries,name,onFieldCustomErrorsChange,onFieldValidityChange]);react.useEffect((()=>{const control=ref.current;if(control){const handleChange=()=>updateControlValidity(control);return control.addEventListener("change",handleChange),()=>control.removeEventListener("change",handleChange)}}),[updateControlValidity]);const resetControlValidity=react.useCallback((()=>{const control=ref.current;control&&(control.setCustomValidity(""),onFieldValiditionClear(name))}),[name,onFieldValiditionClear]);react.useEffect((()=>{const form=ref.current?.form;if(form)return form.addEventListener("reset",resetControlValidity),()=>form.removeEventListener("reset",resetControlValidity)}),[resetControlValidity]),react.useEffect((()=>{const control=ref.current,form=control?.closest("form");if(form&&fieldContext.serverInvalid){const firstInvalidControl=getFirstInvalidControl(form);firstInvalidControl===control&&firstInvalidControl.focus()}}),[fieldContext.serverInvalid]);const validity=validationContext.getFieldValidity(name);return(0,jsx_runtime.jsx)(react_primitive_dist.WV.input,{"data-valid":getValidAttribute(validity,fieldContext.serverInvalid),"data-invalid":getInvalidAttribute(validity,fieldContext.serverInvalid),"aria-invalid":!!fieldContext.serverInvalid||void 0,"aria-describedby":ariaDescriptionContext.getFieldDescription(name),title:"",...controlProps,ref:composedRef,id,name,onInvalid:(0,dist.M)(props.onInvalid,(event=>{const control=event.currentTarget;updateControlValidity(control)})),onChange:(0,dist.M)(props.onChange,(_event=>{resetControlValidity()}))})}));FormControl.displayName="FormControl";var DEFAULT_INVALID_MESSAGE="This value is not valid",DEFAULT_BUILT_IN_MESSAGES={badInput:DEFAULT_INVALID_MESSAGE,patternMismatch:"This value does not match the required pattern",rangeOverflow:"This value is too large",rangeUnderflow:"This value is too small",stepMismatch:"This value does not match the required step",tooLong:"This value is too long",tooShort:"This value is too short",typeMismatch:"This value does not match the required type",valid:void 0,valueMissing:"This value is missing"},FormMessage=react.forwardRef(((props,forwardedRef)=>{const{match,name:nameProp,...messageProps}=props,fieldContext=useFormFieldContext("FormMessage",props.__scopeForm),name=nameProp??fieldContext.name;return void 0===match?(0,jsx_runtime.jsx)(FormMessageImpl,{...messageProps,ref:forwardedRef,name,children:props.children||DEFAULT_INVALID_MESSAGE}):"function"==typeof match?(0,jsx_runtime.jsx)(FormCustomMessage,{match,...messageProps,ref:forwardedRef,name}):(0,jsx_runtime.jsx)(FormBuiltInMessage,{match,...messageProps,ref:forwardedRef,name})}));FormMessage.displayName="FormMessage";var FormBuiltInMessage=react.forwardRef(((props,forwardedRef)=>{const{match,forceMatch=!1,name,children,...messageProps}=props,validity=useValidationContext("FormMessage",messageProps.__scopeForm).getFieldValidity(name);return forceMatch||validity?.[match]?(0,jsx_runtime.jsx)(FormMessageImpl,{ref:forwardedRef,...messageProps,name,children:children??DEFAULT_BUILT_IN_MESSAGES[match]}):null})),FormCustomMessage=react.forwardRef(((props,forwardedRef)=>{const{match,forceMatch=!1,name,id:idProp,children,...messageProps}=props,validationContext=useValidationContext("FormMessage",messageProps.__scopeForm),ref=react.useRef(null),composedRef=(0,react_compose_refs_dist.e)(forwardedRef,ref),_id=(0,react_id_dist.M)(),id=idProp??_id,customMatcherEntry=react.useMemo((()=>({id,match})),[id,match]),{onFieldCustomMatcherEntryAdd,onFieldCustomMatcherEntryRemove}=validationContext;react.useEffect((()=>(onFieldCustomMatcherEntryAdd(name,customMatcherEntry),()=>onFieldCustomMatcherEntryRemove(name,customMatcherEntry.id))),[customMatcherEntry,name,onFieldCustomMatcherEntryAdd,onFieldCustomMatcherEntryRemove]);const validity=validationContext.getFieldValidity(name),hasMatchingCustomError=validationContext.getFieldCustomErrors(name)[id];return forceMatch||validity&&!hasBuiltInError(validity)&&hasMatchingCustomError?(0,jsx_runtime.jsx)(FormMessageImpl,{id,ref:composedRef,...messageProps,name,children:children??DEFAULT_INVALID_MESSAGE}):null})),FormMessageImpl=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,id:idProp,name,...messageProps}=props,ariaDescriptionContext=useAriaDescriptionContext("FormMessage",__scopeForm),_id=(0,react_id_dist.M)(),id=idProp??_id,{onFieldMessageIdAdd,onFieldMessageIdRemove}=ariaDescriptionContext;return react.useEffect((()=>(onFieldMessageIdAdd(name,id),()=>onFieldMessageIdRemove(name,id))),[name,id,onFieldMessageIdAdd,onFieldMessageIdRemove]),(0,jsx_runtime.jsx)(react_primitive_dist.WV.span,{id,...messageProps,ref:forwardedRef})})),FormValidityState=props=>{const{__scopeForm,name:nameProp,children}=props,validationContext=useValidationContext("FormValidityState",__scopeForm),fieldContext=useFormFieldContext("FormValidityState",__scopeForm),name=nameProp??fieldContext.name,validity=validationContext.getFieldValidity(name);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:children(validity)})};FormValidityState.displayName="FormValidityState";var FormSubmit=react.forwardRef(((props,forwardedRef)=>{const{__scopeForm,...submitProps}=props;return(0,jsx_runtime.jsx)(react_primitive_dist.WV.button,{type:"submit",...submitProps,ref:forwardedRef})}));function validityStateToObject(validity){const object={};for(const key in validity)object[key]=validity[key];return object}function isHTMLElement(element){return element instanceof HTMLElement}function isInvalid(control){return function isFormControl(element){return"validity"in element}(control)&&(!1===control.validity.valid||"true"===control.getAttribute("aria-invalid"))}function getFirstInvalidControl(form){const elements=form.elements,[firstInvalidControl]=Array.from(elements).filter(isHTMLElement).filter(isInvalid);return firstInvalidControl}function hasBuiltInError(validity){let error=!1;for(const validityKey in validity){if("valid"!==validityKey&&"customError"!==validityKey&&validity[validityKey]){error=!0;break}}return error}function getValidAttribute(validity,serverInvalid){if(!0===validity?.valid&&!serverInvalid)return!0}function getInvalidAttribute(validity,serverInvalid){if(!1===validity?.valid||serverInvalid)return!0}FormSubmit.displayName="FormSubmit";var dist_Root=Form,Field=FormField,dist_Label=FormLabel,Message=FormMessage},"./node_modules/lucide-react/dist/esm/createLucideIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>createLucideIcon});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const toPascalCase=string=>{const camelCase=(string=>string.replace(/^([A-Z])|[\s-_]+(\w)/g,((match,p1,p2)=>p2?p2.toUpperCase():p1.toLowerCase())))(string);return camelCase.charAt(0).toUpperCase()+camelCase.slice(1)},mergeClasses=(...classes)=>classes.filter(((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index)).join(" ").trim();var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)((({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...rest},[...iconNode.map((([tag,attrs])=>(0,react.createElement)(tag,attrs))),...Array.isArray(children)?children:[children]]))),createLucideIcon=(iconName,iconNode)=>{const Component=(0,react.forwardRef)((({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=toPascalCase(iconName),string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${iconName}`,className),...props});var string}));return Component.displayName=toPascalCase(iconName),Component}},"./node_modules/lucide-react/dist/esm/icons/circle.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Circle});const Circle=(0,__webpack_require__("./node_modules/lucide-react/dist/esm/createLucideIcon.js").Z)("circle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]])}}]);