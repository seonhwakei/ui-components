"use strict";(self.webpackChunknadoo_io=self.webpackChunknadoo_io||[]).push([[184],{"./packages/ui-components/src/stories/design-system/TextField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComposedTextField:()=>ComposedTextField,Default:()=>Default,Disabled:()=>Disabled,FullWidth:()=>FullWidth,SizeAndVariantCombinations:()=>SizeAndVariantCombinations,Sizes:()=>Sizes,States:()=>States,Variants:()=>Variants,WithClearButton:()=>WithClearButton,WithError:()=>WithError,WithHelpText:()=>WithHelpText,WithPrefix:()=>WithPrefix,WithRadixForm:()=>WithRadixForm,WithSuffix:()=>WithSuffix,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Default$parameters,_Default$parameters2,_Variants$parameters,_Variants$parameters2,_Sizes$parameters,_Sizes$parameters2,_States$parameters,_States$parameters2,_WithError$parameters,_WithError$parameters2,_WithPrefix$parameter,_WithPrefix$parameter2,_WithSuffix$parameter,_WithSuffix$parameter2,_WithHelpText$paramet,_WithHelpText$paramet2,_Disabled$parameters,_Disabled$parameters2,_FullWidth$parameters,_FullWidth$parameters2,_WithClearButton$para,_WithClearButton$para2,_SizeAndVariantCombin,_SizeAndVariantCombin2,_ComposedTextField$pa,_ComposedTextField$pa2,_WithRadixForm$parame,_WithRadixForm$parame2,_Users_shkim_Documents_nadooio_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/ui-components/src/index.ts"),_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@radix-ui/react-form/dist/index.mjs"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_Users_shkim_Documents_nadooio_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}const __WEBPACK_DEFAULT_EXPORT__={title:"DesignSystem/TextField/SingleLine",component:_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{variant:{control:{type:"select"},options:Object.keys(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.Ux),description:"텍스트필드 스타일 변형"},size:{control:{type:"select"},options:Object.keys(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.BX),description:"텍스트필드 크기"},state:{control:{type:"select"},options:Object.keys(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.yy),description:"텍스트필드 상태"},disabled:{control:"boolean",description:"텍스트필드 비활성화 여부"},fullWidth:{control:"boolean",description:"텍스트필드가 전체 너비를 차지할지 여부"},required:{control:"boolean",description:"필수 입력 여부"},onChange:{action:"changed"},onClear:{action:"cleared"}}};var Default={args:{label:"기본 텍스트 필드",placeholder:"텍스트를 입력하세요",variant:"outlined",size:"md"}},Variants={render:function render(){return __jsx("div",{style:{display:"flex",flexDirection:"column",gap:"16px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Outlined 텍스트필드",placeholder:"Outlined 스타일",variant:"outlined"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Filled 텍스트필드",placeholder:"Filled 스타일",variant:"filled"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Underlined 텍스트필드",placeholder:"Underlined 스타일",variant:"underlined"}))}},Sizes={render:function render(){return __jsx("div",{style:{display:"flex",flexDirection:"column",gap:"16px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"작은 텍스트필드",placeholder:"Small 크기",size:"sm"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"중간 텍스트필드",placeholder:"Medium 크기",size:"md"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"큰 텍스트필드",placeholder:"Large 크기",size:"lg"}))}},States={render:function render(){return __jsx("div",{style:{display:"flex",flexDirection:"column",gap:"16px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"기본 상태",placeholder:"Default 상태",state:"default"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"호버 상태",placeholder:"Hover 상태",state:"hover"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"포커스 상태",placeholder:"Focus 상태",state:"focus"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"비활성화 상태",placeholder:"Disabled 상태",disabled:!0}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"에러 상태",placeholder:"Error 상태",error:"오류가 발생했습니다"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"성공 상태",placeholder:"Success 상태",state:"success"}))}},WithError={args:{label:"에러가 있는 필드",placeholder:"텍스트를 입력하세요",error:"이 필드는 필수입니다"}},WithPrefix={args:{label:"접두사가 있는 필드",placeholder:"금액을 입력하세요",prefix:"₩"}},WithSuffix={args:{label:"접미사가 있는 필드",placeholder:"이메일을 입력하세요",suffix:"@example.com"}},WithHelpText={args:{label:"도움말이 있는 필드",placeholder:"패스워드를 입력하세요",helpText:"8자 이상의 문자, 숫자, 특수문자를 포함해야 합니다.",type:"password"}},Disabled={args:{label:"비활성화된 필드",placeholder:"편집할 수 없습니다",disabled:!0,value:"비활성화된 값"}},FullWidth={args:{label:"전체 너비 필드",placeholder:"이 필드는 부모 요소의 전체 너비를 차지합니다",fullWidth:!0},parameters:{docs:{description:{story:"`fullWidth` 속성을 true로 설정하면 TextField가 부모 요소의 전체 너비를 차지합니다."}}}},WithClearButton={render:function render(){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("지울 수 있는 텍스트"),value=_useState[0],setValue=_useState[1];return __jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"클리어 버튼이 있는 필드",value,onChange:function handleChange(e){setValue(e.target.value)},clearButton:!0,onClear:function handleClear(){setValue("")}})}},SizeAndVariantCombinations={render:function render(){return __jsx("div",{style:{display:"flex",flexDirection:"column",gap:"24px"}},__jsx("div",null,__jsx("h3",{style:{marginBottom:"12px"}},"Outlined 변형"),__jsx("div",{style:{display:"flex",flexDirection:"column",gap:"12px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Small Outlined",placeholder:"Small Outlined",size:"sm",variant:"outlined"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Medium Outlined",placeholder:"Medium Outlined",size:"md",variant:"outlined"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Large Outlined",placeholder:"Large Outlined",size:"lg",variant:"outlined"}))),__jsx("div",null,__jsx("h3",{style:{marginBottom:"12px"}},"Filled 변형"),__jsx("div",{style:{display:"flex",flexDirection:"column",gap:"12px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Small Filled",placeholder:"Small Filled",size:"sm",variant:"filled"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Medium Filled",placeholder:"Medium Filled",size:"md",variant:"filled"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Large Filled",placeholder:"Large Filled",size:"lg",variant:"filled"}))),__jsx("div",null,__jsx("h3",{style:{marginBottom:"12px"}},"Underlined 변형"),__jsx("div",{style:{display:"flex",flexDirection:"column",gap:"12px"}},__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Small Underlined",placeholder:"Small Underlined",size:"sm",variant:"underlined"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Medium Underlined",placeholder:"Medium Underlined",size:"md",variant:"underlined"}),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.nv,{label:"Large Underlined",placeholder:"Large Underlined",size:"lg",variant:"underlined"}))))}},ComposedTextField={render:function render(){var _useState2=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),value=_useState2[0],setValue=_useState2[1];return __jsx("div",{className:"space-y-4"},__jsx("h3",null,"복합 컴포넌트 사용 예제"),__jsx("div",null,__jsx("label",{htmlFor:"custom-text-field",className:"block mb-2 text-sm font-medium"},"커스텀 텍스트 필드"),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.fC,null,__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.oT,null,"🔍"),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.II,{id:"custom-text-field",placeholder:"검색어를 입력하세요...",value,onChange:function handleChange(e){setValue(e.target.value)}}),value&&__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.CM,null,__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.Cd,{onClick:function onClick(){return setValue("")}})))))}},WithRadixForm={render:function render(){return __jsx("div",{style:{width:"300px"}},__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.fC,{onSubmit:function onSubmit(e){e.preventDefault(),alert("폼이 제출되었습니다!")}},__jsx("div",{style:{marginBottom:"16px"}},__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.gN,{name:"email"},__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.__,null,"이메일"),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.fC,null,__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.II,{type:"email",required:!0,placeholder:"이메일을 입력하세요"})),__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.v0,{match:"valueMissing"},"이메일을 입력해주세요"),__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.v0,{match:"typeMismatch"},"유효한 이메일 형식이 아닙니다"))),__jsx("div",{style:{marginBottom:"16px"}},__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.gN,{name:"password"},__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.__,null,"비밀번호"),__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.fC,null,__jsx(_nadoo_ui_components__WEBPACK_IMPORTED_MODULE_2__.II,{type:"password",required:!0,minLength:8,placeholder:"비밀번호를 입력하세요"})),__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.v0,{match:"valueMissing"},"비밀번호를 입력해주세요"),__jsx(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_3__.v0,{match:"tooShort"},"비밀번호는 최소 8자 이상이어야 합니다"))),__jsx("button",{type:"submit",style:{backgroundColor:"var(--color-primary-500)",color:"white",padding:"8px 16px",borderRadius:"4px",border:"none",cursor:"pointer"}},"제출")))}};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '기본 텍스트 필드',\n    placeholder: '텍스트를 입력하세요',\n    variant: 'outlined',\n    size: 'md'\n  }\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2=_Default$parameters2.docs)||void 0===_Default$parameters2?void 0:_Default$parameters2.source)})}),Variants.parameters=_objectSpread(_objectSpread({},Variants.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Variants$parameters=Variants.parameters)||void 0===_Variants$parameters?void 0:_Variants$parameters.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    gap: \'16px\'\n  }}>\n      <TextField label="Outlined 텍스트필드" placeholder="Outlined 스타일" variant="outlined" />\n      <TextField label="Filled 텍스트필드" placeholder="Filled 스타일" variant="filled" />\n      <TextField label="Underlined 텍스트필드" placeholder="Underlined 스타일" variant="underlined" />\n    </div>\n}'},null===(_Variants$parameters2=Variants.parameters)||void 0===_Variants$parameters2||null===(_Variants$parameters2=_Variants$parameters2.docs)||void 0===_Variants$parameters2?void 0:_Variants$parameters2.source)})}),Sizes.parameters=_objectSpread(_objectSpread({},Sizes.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Sizes$parameters=Sizes.parameters)||void 0===_Sizes$parameters?void 0:_Sizes$parameters.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    gap: \'16px\'\n  }}>\n      <TextField label="작은 텍스트필드" placeholder="Small 크기" size="sm" />\n      <TextField label="중간 텍스트필드" placeholder="Medium 크기" size="md" />\n      <TextField label="큰 텍스트필드" placeholder="Large 크기" size="lg" />\n    </div>\n}'},null===(_Sizes$parameters2=Sizes.parameters)||void 0===_Sizes$parameters2||null===(_Sizes$parameters2=_Sizes$parameters2.docs)||void 0===_Sizes$parameters2?void 0:_Sizes$parameters2.source)})}),States.parameters=_objectSpread(_objectSpread({},States.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_States$parameters=States.parameters)||void 0===_States$parameters?void 0:_States$parameters.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    gap: \'16px\'\n  }}>\n      <TextField label="기본 상태" placeholder="Default 상태" state="default" />\n      <TextField label="호버 상태" placeholder="Hover 상태" state="hover" />\n      <TextField label="포커스 상태" placeholder="Focus 상태" state="focus" />\n      <TextField label="비활성화 상태" placeholder="Disabled 상태" disabled />\n      <TextField label="에러 상태" placeholder="Error 상태" error="오류가 발생했습니다" />\n      <TextField label="성공 상태" placeholder="Success 상태" state="success" />\n    </div>\n}'},null===(_States$parameters2=States.parameters)||void 0===_States$parameters2||null===(_States$parameters2=_States$parameters2.docs)||void 0===_States$parameters2?void 0:_States$parameters2.source)})}),WithError.parameters=_objectSpread(_objectSpread({},WithError.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithError$parameters=WithError.parameters)||void 0===_WithError$parameters?void 0:_WithError$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '에러가 있는 필드',\n    placeholder: '텍스트를 입력하세요',\n    error: '이 필드는 필수입니다'\n  }\n}"},null===(_WithError$parameters2=WithError.parameters)||void 0===_WithError$parameters2||null===(_WithError$parameters2=_WithError$parameters2.docs)||void 0===_WithError$parameters2?void 0:_WithError$parameters2.source)})}),WithPrefix.parameters=_objectSpread(_objectSpread({},WithPrefix.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithPrefix$parameter=WithPrefix.parameters)||void 0===_WithPrefix$parameter?void 0:_WithPrefix$parameter.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '접두사가 있는 필드',\n    placeholder: '금액을 입력하세요',\n    prefix: '₩'\n  }\n}"},null===(_WithPrefix$parameter2=WithPrefix.parameters)||void 0===_WithPrefix$parameter2||null===(_WithPrefix$parameter2=_WithPrefix$parameter2.docs)||void 0===_WithPrefix$parameter2?void 0:_WithPrefix$parameter2.source)})}),WithSuffix.parameters=_objectSpread(_objectSpread({},WithSuffix.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithSuffix$parameter=WithSuffix.parameters)||void 0===_WithSuffix$parameter?void 0:_WithSuffix$parameter.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '접미사가 있는 필드',\n    placeholder: '이메일을 입력하세요',\n    suffix: '@example.com'\n  }\n}"},null===(_WithSuffix$parameter2=WithSuffix.parameters)||void 0===_WithSuffix$parameter2||null===(_WithSuffix$parameter2=_WithSuffix$parameter2.docs)||void 0===_WithSuffix$parameter2?void 0:_WithSuffix$parameter2.source)})}),WithHelpText.parameters=_objectSpread(_objectSpread({},WithHelpText.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithHelpText$paramet=WithHelpText.parameters)||void 0===_WithHelpText$paramet?void 0:_WithHelpText$paramet.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '도움말이 있는 필드',\n    placeholder: '패스워드를 입력하세요',\n    helpText: '8자 이상의 문자, 숫자, 특수문자를 포함해야 합니다.',\n    type: 'password'\n  }\n}"},null===(_WithHelpText$paramet2=WithHelpText.parameters)||void 0===_WithHelpText$paramet2||null===(_WithHelpText$paramet2=_WithHelpText$paramet2.docs)||void 0===_WithHelpText$paramet2?void 0:_WithHelpText$paramet2.source)})}),Disabled.parameters=_objectSpread(_objectSpread({},Disabled.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Disabled$parameters=Disabled.parameters)||void 0===_Disabled$parameters?void 0:_Disabled$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '비활성화된 필드',\n    placeholder: '편집할 수 없습니다',\n    disabled: true,\n    value: '비활성화된 값'\n  }\n}"},null===(_Disabled$parameters2=Disabled.parameters)||void 0===_Disabled$parameters2||null===(_Disabled$parameters2=_Disabled$parameters2.docs)||void 0===_Disabled$parameters2?void 0:_Disabled$parameters2.source)})}),FullWidth.parameters=_objectSpread(_objectSpread({},FullWidth.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_FullWidth$parameters=FullWidth.parameters)||void 0===_FullWidth$parameters?void 0:_FullWidth$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    label: '전체 너비 필드',\n    placeholder: '이 필드는 부모 요소의 전체 너비를 차지합니다',\n    fullWidth: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: '`fullWidth` 속성을 true로 설정하면 TextField가 부모 요소의 전체 너비를 차지합니다.'\n      }\n    }\n  }\n}"},null===(_FullWidth$parameters2=FullWidth.parameters)||void 0===_FullWidth$parameters2||null===(_FullWidth$parameters2=_FullWidth$parameters2.docs)||void 0===_FullWidth$parameters2?void 0:_FullWidth$parameters2.source)})}),WithClearButton.parameters=_objectSpread(_objectSpread({},WithClearButton.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithClearButton$para=WithClearButton.parameters)||void 0===_WithClearButton$para?void 0:_WithClearButton$para.docs),{},{source:_objectSpread({originalSource:"{\n  render: () => {\n    const [value, setValue] = useState('지울 수 있는 텍스트');\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(e.target.value);\n    };\n    const handleClear = () => {\n      setValue('');\n    };\n    return <TextField label=\"클리어 버튼이 있는 필드\" value={value} onChange={handleChange} clearButton onClear={handleClear} />;\n  }\n}"},null===(_WithClearButton$para2=WithClearButton.parameters)||void 0===_WithClearButton$para2||null===(_WithClearButton$para2=_WithClearButton$para2.docs)||void 0===_WithClearButton$para2?void 0:_WithClearButton$para2.source)})}),SizeAndVariantCombinations.parameters=_objectSpread(_objectSpread({},SizeAndVariantCombinations.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_SizeAndVariantCombin=SizeAndVariantCombinations.parameters)||void 0===_SizeAndVariantCombin?void 0:_SizeAndVariantCombin.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    gap: \'24px\'\n  }}>\n      <div>\n        <h3 style={{\n        marginBottom: \'12px\'\n      }}>Outlined 변형</h3>\n        <div style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        gap: \'12px\'\n      }}>\n          <TextField label="Small Outlined" placeholder="Small Outlined" size="sm" variant="outlined" />\n          <TextField label="Medium Outlined" placeholder="Medium Outlined" size="md" variant="outlined" />\n          <TextField label="Large Outlined" placeholder="Large Outlined" size="lg" variant="outlined" />\n        </div>\n      </div>\n\n      <div>\n        <h3 style={{\n        marginBottom: \'12px\'\n      }}>Filled 변형</h3>\n        <div style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        gap: \'12px\'\n      }}>\n          <TextField label="Small Filled" placeholder="Small Filled" size="sm" variant="filled" />\n          <TextField label="Medium Filled" placeholder="Medium Filled" size="md" variant="filled" />\n          <TextField label="Large Filled" placeholder="Large Filled" size="lg" variant="filled" />\n        </div>\n      </div>\n\n      <div>\n        <h3 style={{\n        marginBottom: \'12px\'\n      }}>Underlined 변형</h3>\n        <div style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        gap: \'12px\'\n      }}>\n          <TextField label="Small Underlined" placeholder="Small Underlined" size="sm" variant="underlined" />\n          <TextField label="Medium Underlined" placeholder="Medium Underlined" size="md" variant="underlined" />\n          <TextField label="Large Underlined" placeholder="Large Underlined" size="lg" variant="underlined" />\n        </div>\n      </div>\n    </div>\n}'},null===(_SizeAndVariantCombin2=SizeAndVariantCombinations.parameters)||void 0===_SizeAndVariantCombin2||null===(_SizeAndVariantCombin2=_SizeAndVariantCombin2.docs)||void 0===_SizeAndVariantCombin2?void 0:_SizeAndVariantCombin2.source)})}),ComposedTextField.parameters=_objectSpread(_objectSpread({},ComposedTextField.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_ComposedTextField$pa=ComposedTextField.parameters)||void 0===_ComposedTextField$pa?void 0:_ComposedTextField$pa.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => {\n    const [value, setValue] = useState(\'\');\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(e.target.value);\n    };\n    return <div className="space-y-4">\n        <h3>복합 컴포넌트 사용 예제</h3>\n        <div>\n          <label htmlFor="custom-text-field" className="block mb-2 text-sm font-medium">\n            커스텀 텍스트 필드\n          </label>\n          <Root>\n            <Prefix>🔍</Prefix>\n            <Input id="custom-text-field" placeholder="검색어를 입력하세요..." value={value} onChange={handleChange} />\n            {value && <Suffix>\n                <ClearButton onClick={() => setValue(\'\')} />\n              </Suffix>}\n          </Root>\n        </div>\n      </div>;\n  }\n}'},null===(_ComposedTextField$pa2=ComposedTextField.parameters)||void 0===_ComposedTextField$pa2||null===(_ComposedTextField$pa2=_ComposedTextField$pa2.docs)||void 0===_ComposedTextField$pa2?void 0:_ComposedTextField$pa2.source)})}),WithRadixForm.parameters=_objectSpread(_objectSpread({},WithRadixForm.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithRadixForm$parame=WithRadixForm.parameters)||void 0===_WithRadixForm$parame?void 0:_WithRadixForm$parame.docs),{},{source:_objectSpread({originalSource:'{\n  render: () => {\n    return <div style={{\n      width: \'300px\'\n    }}>\n        <Form.Root onSubmit={e => {\n        e.preventDefault();\n        alert(\'폼이 제출되었습니다!\');\n      }}>\n          <div style={{\n          marginBottom: \'16px\'\n        }}>\n            <Form.Field name="email">\n              <Form.Label>이메일</Form.Label>\n              <Root>\n                <Input type="email" required placeholder="이메일을 입력하세요" />\n              </Root>\n              <Form.Message match="valueMissing">\n                이메일을 입력해주세요\n              </Form.Message>\n              <Form.Message match="typeMismatch">\n                유효한 이메일 형식이 아닙니다\n              </Form.Message>\n            </Form.Field>\n          </div>\n\n          <div style={{\n          marginBottom: \'16px\'\n        }}>\n            <Form.Field name="password">\n              <Form.Label>비밀번호</Form.Label>\n              <Root>\n                <Input type="password" required minLength={8} placeholder="비밀번호를 입력하세요" />\n              </Root>\n              <Form.Message match="valueMissing">\n                비밀번호를 입력해주세요\n              </Form.Message>\n              <Form.Message match="tooShort">\n                비밀번호는 최소 8자 이상이어야 합니다\n              </Form.Message>\n            </Form.Field>\n          </div>\n\n          <button type="submit" style={{\n          backgroundColor: \'var(--color-primary-500)\',\n          color: \'white\',\n          padding: \'8px 16px\',\n          borderRadius: \'4px\',\n          border: \'none\',\n          cursor: \'pointer\'\n        }}>\n            제출\n          </button>\n        </Form.Root>\n      </div>;\n  }\n}'},null===(_WithRadixForm$parame2=WithRadixForm.parameters)||void 0===_WithRadixForm$parame2||null===(_WithRadixForm$parame2=_WithRadixForm$parame2.docs)||void 0===_WithRadixForm$parame2?void 0:_WithRadixForm$parame2.source)})});const __namedExportsOrder=["Default","Variants","Sizes","States","WithError","WithPrefix","WithSuffix","WithHelpText","Disabled","FullWidth","WithClearButton","SizeAndVariantCombinations","ComposedTextField","WithRadixForm"]}}]);